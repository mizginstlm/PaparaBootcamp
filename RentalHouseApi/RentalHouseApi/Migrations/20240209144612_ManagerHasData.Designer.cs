// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalHouseApi.Data;

#nullable disable

namespace RentalHouseApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240209144612_ManagerHasData")]
    partial class ManagerHasData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentalHouseApi.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmpty")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("RentalHouseApi.Models.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Manager");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65945fe2-797c-4965-80ed-64619283655f"),
                            ManagerName = "admin",
                            PasswordHash = new byte[] { 138, 4, 74, 255, 204, 191, 205, 118, 213, 211, 208, 195, 15, 100, 33, 220, 133, 25, 86, 212, 127, 156, 193, 207, 175, 209, 172, 212, 59, 143, 110, 125, 42, 152, 51, 235, 206, 135, 10, 79, 204, 164, 233, 252, 1, 16, 193, 227, 121, 246, 32, 86, 210, 97, 142, 64, 36, 190, 74, 128, 159, 58, 189, 148 },
                            PasswordSalt = new byte[] { 114, 176, 253, 223, 108, 135, 78, 8, 154, 126, 54, 223, 246, 213, 180, 17, 20, 165, 46, 234, 107, 107, 134, 164, 142, 80, 235, 217, 173, 148, 203, 201, 206, 78, 163, 26, 182, 54, 249, 95, 194, 84, 245, 158, 169, 222, 148, 222, 3, 201, 46, 44, 191, 226, 251, 107, 113, 103, 99, 87, 182, 112, 235, 211, 211, 183, 197, 116, 200, 221, 203, 2, 149, 215, 222, 202, 148, 31, 145, 185, 162, 75, 16, 158, 249, 176, 231, 184, 90, 137, 9, 132, 61, 199, 176, 90, 83, 202, 115, 209, 31, 27, 187, 235, 26, 192, 25, 115, 103, 39, 114, 217, 255, 0, 217, 31, 151, 214, 239, 58, 59, 87, 153, 209, 188, 226, 247, 178 }
                        });
                });

            modelBuilder.Entity("RentalHouseApi.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("YearMonth")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("TenantId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RentalHouseApi.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TenantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("RentalHouseApi.Models.Apartment", b =>
                {
                    b.HasOne("RentalHouseApi.Models.Tenant", "Tenant")
                        .WithOne("Apartment")
                        .HasForeignKey("RentalHouseApi.Models.Apartment", "TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RentalHouseApi.Models.Payment", b =>
                {
                    b.HasOne("RentalHouseApi.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalHouseApi.Models.Tenant", null)
                        .WithMany("Payments")
                        .HasForeignKey("TenantId");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("RentalHouseApi.Models.Tenant", b =>
                {
                    b.Navigation("Apartment");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
